#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	// net.toxbank.isa.parser.TabsParser<E>
	c52 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TabsParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="ariali"> TabsParser&lt;E&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # reader : BufferedReader </td></tr>
			<tr><td align="left"> # count : int </td></tr>
			<tr><td align="left"> # header : ColumnHeader&lt;Resource&gt;[] </td></tr>
			<tr><td align="left"> # tabs : String[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + TabsParser(in : Reader) </td></tr>
			<tr><td align="left"> + close() </td></tr>
			<tr><td align="left"> + hasNext() : boolean </td></tr>
			<tr><td align="left"> + next() : E </td></tr>
			<tr><td align="left"> + remove() </td></tr>
			<tr><td align="left"><font face="ariali" point-size="10.0"> # transform(tabs : String[]) : E </font></td></tr>
			<tr><td align="left"> # readHeader() : ColumnHeader&lt;Resource&gt;[] </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.isa.parser.StudyParser
	c53 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StudyParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> StudyParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + StudyParser(prefixDir : String, name : String, in : Reader, model : OntModel) </td></tr>
			<tr><td align="left"> + StudyParser(template : TemplateStudy, in : Reader) </td></tr>
			<tr><td align="left"> # readHeader() : ColumnHeader&lt;Resource&gt;[] </td></tr>
			<tr><td align="left"> # transform(tabs : String[]) : RowStudy </td></tr>
			<tr><td align="left"> + getStudy() : AStudy </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.isa.parser.InvestigationParser<E>
	c54 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InvestigationParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> InvestigationParser&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # prefixDir : String </td></tr>
			<tr><td align="left"> # name : String </td></tr>
			<tr><td align="left"> # model : OntModel </td></tr>
			<tr><td align="left"> # tstudy : TemplateStudy </td></tr>
			<tr><td align="left"> # tassay : TemplateAssay </td></tr>
			<tr><td align="left"> # study : AStudy </td></tr>
			<tr><td align="left"> # assay : AnAssay </td></tr>
			<tr><td align="left"> # dir : File </td></tr>
			<tr><td align="left"> # prefix : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + InvestigationParser(dir : File, prefixDir : String, name : String, in : Reader, model : OntModel) </td></tr>
			<tr><td align="left"> # readHeader() : ColumnHeader&lt;Resource&gt;[] </td></tr>
			<tr><td align="left"> # transform(tabs : String[]) : E </td></tr>
			<tr><td align="left"> + parseStudyFile(tstudy : TemplateStudy, studyPrefix : String, file : File) : AStudy </td></tr>
			<tr><td align="left"> + parseStudyFile(studyPrefix : String, file : File, model : OntModel) : AStudy </td></tr>
			<tr><td align="left"> + parseAssayFile(tassay : TemplateAssay, assayPrefix : String, file : File) : AnAssay </td></tr>
			<tr><td align="left"> + parseAssayFile(assayPrefix : String, file : File, model : OntModel) : AnAssay </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.isa.parser.AssayParser
	c55 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssayParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> AssayParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + AssayParser(templateAssay : TemplateAssay, in : Reader) </td></tr>
			<tr><td align="left"> + AssayParser(prefixDir : String, name : String, in : Reader, model : OntModel) </td></tr>
			<tr><td align="left"> # readHeader() : ColumnHeader&lt;Resource&gt;[] </td></tr>
			<tr><td align="left"> # transform(tabs : String[]) : RowAssay </td></tr>
			<tr><td align="left"> + getAssay() : AnAssay </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//net.toxbank.isa.parser.StudyParser extends net.toxbank.isa.parser.TabsParser<net.toxbank.isa.RowStudy>
	c52:p -> c53:p [dir=back,arrowtail=empty];
	//net.toxbank.isa.parser.InvestigationParser<E> extends net.toxbank.isa.parser.TabsParser<E>
	c52:p -> c54:p [dir=back,arrowtail=empty];
	//net.toxbank.isa.parser.AssayParser extends net.toxbank.isa.parser.TabsParser<net.toxbank.isa.RowAssay>
	c52:p -> c55:p [dir=back,arrowtail=empty];
}

